import os
import sqlalchemy as sa
from sqlalchemy import Column, Integer, String, DateTime, REAL
from sqlalchemy.orm import Session, sessionmaker
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy.engine.base import Engine
from typing import Dict, Text, List, Union, Optional

from random import choice, randrange, sample, randint
from numpy import arange
from datetime import datetime, timedelta
import pytz

utc = pytz.UTC

projects_list = {
    "project_1": {
        "name": "REG506-AMD001",
        "total_pinjaman": 100_000_000,
        "slot_pendanaan": 57_500_000,
        "sisa_waktu_pendananaan": "2 hari lagi",
        "grade": "A",
        "rate": "14%",
        "durasi_pinjaman": "4 bulan",
        "tujuan": "invoice financing",
    },
    "project_2": {
        "name": "REG507-NVD005",
        "total_pinjaman": 100_000_000,
        "slot_pendanaan": 71_700_000,
        "sisa_waktu_pendananaan": "1 hari lagi",
        "grade": "C",
        "rate": "18%",
        "durasi_pinjaman": "4 bulan",
        "tujuan": "invoice financing",
    },
    "project_3": {
        "name": "REG508-INT023",
        "total_pinjaman": 70_000_000,
        "slot_pendanaan": 38_500_000,
        "sisa_waktu_pendananaan": "3 hari lagi",
        "grade": "C",
        "rate": "18%",
        "durasi_pinjaman": "3 bulan",
        "tujuan": "working capital financing",
    },
}


Base = declarative_base()


class Account(Base):
    """Accounts table.
    `session_id` is only meaningful for accounts generated by conversation sessions,
    when it is equal to `tracker.sender_id`.
    Since `id` autoincrements, it is used to generate unique account numbers by
    adding leading zeros to it.
    """

    __tablename__ = "account"
    id = Column(Integer, primary_key=True)
    session_id = Column(String(255))
    account_holder_name = Column(String(255))
    currency = Column(String(255))

